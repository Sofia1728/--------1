--=============== МОДУЛЬ 3. ОСНОВЫ SQL =======================================
--= ПОМНИТЕ, ЧТО НЕОБХОДИМО УСТАНОВИТЬ ВЕРНОЕ СОЕДИНЕНИЕ И ВЫБРАТЬ СХЕМУ PUBLIC===========
SET search_path TO public;

--======== ОСНОВНАЯ ЧАСТЬ ==============

--ЗАДАНИЕ №1
--Выведите для каждого покупателя его адрес проживания, 
--город и страну проживания.
SELECT customer_id, address, city, country
FROM customer
JOIN address ON customer.address_id = address.address_id
JOIN city  ON address.city_id = city.city_id
JOIN country ON city.country_id = country.country_id



--ЗАДАНИЕ №2
--С помощью SQL-запроса посчитайте для каждого магазина количество его покупателей.
SELECT store_id, COUNT(customer_id)
FROM store
JOIN customer ON store.store_id = customer.store_id
GROUP BY store_id  



--Доработайте запрос и выведите только те магазины, 
--у которых количество покупателей больше 300-от.
--Для решения используйте фильтрацию по сгруппированным строкам 
--с использованием функции агрегации.
WITH StoreWithCustomers AS (
    SELECT 
        s.store_id,
        COUNT(c.customer_id) AS customer_count
    FROM store s
    JOIN customer c ON s.store_id = c.store_id
    GROUP BY s.store_id
    HAVING COUNT(c.customer_id) > 300
)



-- Доработайте запрос, добавив в него информацию о городе магазина, 
--а также фамилию и имя продавца, который работает в этом магазине.
SELECT s.store_id, ci.city, st.first_name, st.last_name 
FROM store s
JOIN address a ON s.address_id = a.address_id
JOIN city ci ON a.city_id = ci.city_id
JOIN staff st ON s.manager_staff_id = st.staff_id
WHERE s.store_id IN (
    SELECT store_id
    FROM customer
    GROUP BY store_id
    HAVING COUNT(customer_id) > 300
)
 



--ЗАДАНИЕ №3
--Выведите ТОП-5 покупателей, 
--которые взяли в аренду за всё время наибольшее количество фильмов
SELECT c.customer_id, c.first_name,  c.last_name, 
COUNT(r.rental_id) AS rental_count
FROM customer c
JOIN rental r ON c.customer_id =r.customer_id
GROUP BY c.customer_id, c.first_name, c.last_name
ORDER BY rental_count DESC

LIMIT 5




--ЗАДАНИЕ №4
--Посчитайте для каждого покупателя 4 аналитических показателя:
--  1. количество фильмов, которые он взял в аренду
--  2. общую стоимость платежей за аренду всех фильмов (значение округлите до целого числа)
--  3. минимальное значение платежа за аренду фильма
--  4. максимальное значение платежа за аренду фильма
SELECT c.customer_id, c.first_name, c.last_name,
       COUNT(rental_id) AS total_rentals,
       ROUND(SUM(p.amount), 0) AS total_payment,
       MIN(p.amount) AS min_payment,
       MAX(p.amount) AS max_payment
FROM customer c
JOIN rental r ON c.customer_id = r.customer_id
JOIN payment p ON r.rental_id = p.rental_id
GROUP BY c.customer_id, c.first_name, c.last_name



--ЗАДАНИЕ №5
--Используя данные из таблицы городов, составьте все возможные пары городов так, чтобы 
--в результате не было пар с одинаковыми названиями городов. Решение должно быть через Декартово произведение.
                  
SELECT c1.city as city1, c2.city as city2
FROM (SELECT DISTINCT city from city) c1
CROSS JOIN (SELECT DISTINCT city FROM city) c2
WHERE c1.city != c2.city
ORDER BY city1, city2


--ЗАДАНИЕ №6
--Используя данные из таблицы rental о дате выдачи фильма в аренду (поле rental_date) и 
--дате возврата (поле return_date), вычислите для каждого покупателя среднее количество 
--дней, за которые он возвращает фильмы. В результате должны быть дробные значения, а не интервал.
 SELECT c.customer_id, c.first_name, c.last_name,
       AVG(DATE_PART('day', r.return_date - r.rental_date)) AS avg_return_days
FROM customer c
JOIN rental r ON c.customer_id = r.customer_id
GROUP BY c.customer_id, c.first_name, c.last_name




--======== ДОПОЛНИТЕЛЬНАЯ ЧАСТЬ ==============

--ЗАДАНИЕ №1
--Посчитайте для каждого фильма сколько раз его брали в аренду и значение общей стоимости аренды фильма за всё время.





--ЗАДАНИЕ №2
--Доработайте запрос из предыдущего задания и выведите с помощью него фильмы, которые отсутствуют на dvd дисках.





--ЗАДАНИЕ №3
--Посчитайте количество продаж, выполненных каждым продавцом. Добавьте вычисляемую колонку "Премия".
--Если количество продаж превышает 7300, то значение в колонке будет "Да", иначе должно быть значение "Нет".







